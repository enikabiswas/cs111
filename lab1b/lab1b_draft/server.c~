#include <stdlib.h>
#include <stdio.h>
#include <string.h>
#include <unistd.h>
#include <sys/socket.h>
#include <errno.h>

static int portflag = -1;
static int portnum = -1;

int tochild_pipefd[2];
int fromchild_pipefd[2];

void errorcheck(int ret, char *calledfunc, char *outerfunc) {
	if (ret == -1) {
		fprintf(stderr, "error calling the %s function in the %s routine", calledfunc, outerfunc);
		exit(1);)
	}
}

void getOpts(int argc, char *argv[]) {
	int c = 0;
        while(1) {
                if (c == -1) {
                        break;
                }
                static struct option long_options[] = {
                        {"port", required_argument, 0, 'p'},
                        {0, 0, 0, 0}
                };
                int option_index = 0;
                c = getopt_long(argc, argv, "p:", long_options, &option_index);
                if (c == -1) {
                        break;
                }
                switch(c) {
                case 'p':
                        portflag = 1;
			portnum = stoi(optarg);
                        break;
                default:
                        fprintf(stderr, "unrecognized argument");
                        exit(1);
                        break;
                }
        }
	if (portflag == -1) {
		fprintf(stderr, "--port is a required argument. Usage ./lab1b --port=port#")
	}
}

void execChild(int *tochild_pipefd, int *fromchild_pipefd) {

}

void shutdown(void) {

}



int main (int argc, char *argv[]) {
	
	getOpts(argc, argv);
	atexit(shutdown);
	
	
	/*   Create Socket   */
	/*   Call bind   */
	/*   Listen   */
	/*   Accept   */

	exit(0);
}
